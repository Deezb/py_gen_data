Module(body=[FunctionDef(name='evaluate', args=arguments(args=[arg(arg='x', annotation=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Name(id='x', ctx=Store())], value=Num(n=21)), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='x', ctx=Load()), ops=[GtE()], comparators=[Num(n=10)]), Compare(left=Name(id='x', ctx=Load()), ops=[LtE()], comparators=[Num(n=20)])]), body=[Assign(targets=[Name(id='x', ctx=Store())], value=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Num(n=5)))], orelse=[Assign(targets=[Name(id='x', ctx=Store())], value=BinOp(left=Name(id='x', ctx=Load()), op=Mult(), right=Num(n=6)))]), If(test=Compare(left=Name(id='x', ctx=Load()), ops=[Gt()], comparators=[Num(n=25)]), body=[Assign(targets=[Name(id='y', ctx=Store())], value=BinOp(left=BinOp(left=Num(n=2), op=Mult(), right=Name(id='x', ctx=Load())), op=Add(), right=Num(n=7)))], orelse=[Assign(targets=[Name(id='y', ctx=Store())], value=BinOp(left=BinOp(left=Num(n=3), op=Mult(), right=Name(id='x', ctx=Load())), op=Add(), right=Num(n=2)))]), Return(value=Name(id='y', ctx=Load()))], decorator_list=[], returns=None)])